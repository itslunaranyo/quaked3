//==============================
//	errors.cpp
//==============================

#include "qe3.h"

bool g_bWarningOrError;

/*
=================
Warning
=================
*/
void Warning(char *warning, ...)
{
	va_list argptr;
	char	text[1024];

	va_start(argptr, warning);
	vsprintf(text, warning, argptr);
	va_end(argptr);

	Sys_Printf("WARNING: %s\n", text);
	g_bWarningOrError = true;
}

/*
=================
Error
=================
*/
void Error(char *error, ...)
{
	va_list argptr;
	char	text[1024];
	//	char	text2[1024];
	//	int		err;

	va_start(argptr, error);
	vsprintf(text, error, argptr);
	va_end(argptr);

	throw qe3_exception(text);
}

/*
=================
ReportError

exceptions generated by qe3 should never be potentially program-terminal, because
	they're all caught at an ultimate level by the main event loop
regular std::exceptions will bubble past, so throw one of those if you really want
	to kill the application
=================
*/
void ReportError(qe3_exception& ex)
{
	Sys_Printf("ERROR: %s\n", ex.what());
	g_bWarningOrError = true;
}
